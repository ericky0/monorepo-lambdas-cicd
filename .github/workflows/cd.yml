name: cd

on:
  push:
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '22.11.0'
            - name: Fetch the full history
        run: |
          git fetch --prune --unshallow

      - name: Find the merged PR branch
        id: find_pr_branch
        run: |
          # Encontrar o commit de merge
          MERGE_COMMIT=$(git log --merges -n 1 --pretty=format:"%H")
          echo "Merge commit: $MERGE_COMMIT"
          
          # Obter a branch de origem da PR a partir do commit de merge
          PR_BRANCH=$(git log --merges -n 1 --pretty=format:"%s" | grep -oP '(?<=Merge pull request #\d+ from )(.*)(?=\s*$)')
          echo "PR Branch: $PR_BRANCH"
          echo "PR_BRANCH=$PR_BRANCH" >> $GITHUB_ENV

      - name: Find the common base commit
        id: find_base_commit
        run: |
          # Agora que sabemos a branch da PR, encontramos a base comum
          BASE_COMMIT=$(git merge-base origin/master origin/${{ env.PR_BRANCH }})
          echo "Base commit: $BASE_COMMIT"
          echo "BASE_COMMIT=$BASE_COMMIT" >> $GITHUB_ENV

      - name: Detect changed files after PR merge
        id: detect_changed_lambdas
        run: |
          # Comparar os arquivos entre a base da PR e o commit atual (apÃ³s o merge)
          CHANGED_FILES=$(git diff --name-only ${{ env.BASE_COMMIT }} HEAD)
          echo "Changed files: $CHANGED_FILES"

          # Identificar quais Lambdas foram alteradas
          CHANGED_LAMBDAS=""
          for lambda in src/lambdas/*; do
            if [ -d "$lambda" ]; then
              lambda_name=$(basename "$lambda")
              if echo "$CHANGED_FILES" | grep -q "src/lambdas/$lambda_name"; then
                CHANGED_LAMBDAS="$CHANGED_LAMBDAS $lambda_name"
              fi
            fi
          done

          CHANGED_LAMBDAS=$(echo "$CHANGED_LAMBDAS" | xargs)
          echo "Changed lambdas: $CHANGED_LAMBDAS"
          echo "changed_lambdas=$CHANGED_LAMBDAS" >> $GITHUB_ENV

      - name: Install Dependencies
        env:
          CI: true
        run: |
          npm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build and Deploy changed lambdas
        run: |
          for lambda in ${{ env.changed_lambdas }}; do
            echo "LAMBDA BUILD AND DEPLOY"
            npx lambda-build upload $lambda -e src/lambdas/$lambda/index.ts -r ${{ secrets.AWS_REGION }}
          done
