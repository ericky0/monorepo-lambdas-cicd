name: cd

on:
  push:
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '22.11.0'

      - name: Fetch the full history
        run: git fetch --prune --unshallow

      # Find the merged PR branch and base commit
      - name: Determine PR Branch and Base Commit
        id: determine_commits
        run: |
          # Find the merge commit SHA
          MERGE_COMMIT=$(git log -1 --merges --format="%H")
          echo "Merge Commit: $MERGE_COMMIT" >> $GITHUB_ENV

          # Find the PR branch name
          PR_BRANCH=$(git rev-parse --symbolic-full-name --short HEAD@{1})
          echo "PR Branch: $PR_BRANCH" >> $GITHUB_ENV

          # Find the base commit SHA
          BASE_COMMIT=$(git merge-base $PR_BRANCH origin/master)
          echo "Base Commit: $BASE_COMMIT" >> $GITHUB_ENV

      - name: Detect changed files
        id: detect_changed_lambdas
        run: |
          # List changed files between the base commit and the merge commit
          CHANGED_FILES=$(git diff --name-only ${{ env.BASE_COMMIT }} ${{ env.MERGE_COMMIT }})
          echo "Changed Files: $CHANGED_FILES"

          # Identify changed Lambdas
          CHANGED_LAMBDAS=""
          for lambda in src/lambdas/*; do
            if [ -d "$lambda" ]; then
              lambda_name=$(basename "$lambda")
              if echo "$CHANGED_FILES" | grep -q "src/lambdas/$lambda_name"; then
                CHANGED_LAMBDAS="$CHANGED_LAMBDAS $lambda_name"
              fi
            fi
          done

          CHANGED_LAMBDAS=$(echo "$CHANGED_LAMBDAS" | xargs)
          echo "Changed Lambdas: $CHANGED_LAMBDAS" >> $GITHUB_ENV

      - name: Install Dependencies
        env:
          CI: true
        run: |
          npm install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build and Deploy changed lambdas
        run: |
          for lambda in ${{ env.changed_lambdas }}; do
            echo "LAMBDA BUILD AND DEPLOY"
            npx lambda-build upload $lambda -e src/lambdas/$lambda/index.ts -r ${{ secrets.AWS_REGION }}
          done
